---
sail:

  model_path: null

  estimators:
    - random_forest: &random_forest
        class: sail.models.river.forest.AdaptiveRandomForestClassifier
        params:
          - name: n_models
            value: 20

  steps: &steps
    - type: tuple
      name: select
      class: sail.transformers.river.compose.Select
      params:
        - name: keys
          value:
            - 'dry_bulb_temperature'
            - 'pv_module_isc'
            - 'mt5_cabinet_temperature'
            - 'pv_module_imp'
            - 'relative_humidity'
            - 'diffuse_horizontal_irradiance'
            - 'direct_normal_irradiance'
            - 'pv_module_voc'
            - 'pv_module_vmp'
            - 'global_horizontal_irradiance'
            - 'pv_module_ff'
            - 'pv_module_pm'
            - 'delta_licor_poa'
            - 'precipitation_accumulated'
            - 'temperature'
            - 'delta_cmp'
            - 'solar_qa_residual'
            - 'poa_irradiance'
            - 'atmospheric_pressure'
    - type: tuple
      name: standard_scalar
      class: sail.transformers.river.preprocessing.StandardScaler
    - type: tuple
      name: classifier
      ref: *random_forest

  sail_pipeline:
    - name: steps
      ref:  *steps
    - name: scoring
      class: river.metrics.Accuracy
    - name: verbosity_level
      value: 1
    
  parameter_grid:
    - name: classifier__n_models
      value:
        - 10
        - 15
        - 20

  search_method: SAILTuneGridSearchCV
  search_data_size: 500
  search_method_params:
    - name: verbose
      value: 1
    - name: num_cpus_per_trial
      value: 4
    - name: max_iters
      value: 1
    - name: early_stopping
      value: false
    - name: mode
      value: max
    - name: scoring
      value: accuracy
    - name: pipeline_auto_early_stop
      value: false
    - name: keep_best_configurations
      value: 2
    - name: cluster_address
      value: "ray://ray-cluster-head-svc:10001"
    - name: namespace
      value: sail-tune
    - name: runtime_env
      params:
        - name: py_modules 
          module: 
            - sail     
        - name: pip 
          value:
            - "dill"
            - "seaborn==0.12.2"
            - "ipython"
            - "logzero"
            - "tune_sklearn"
            - "numpy==1.25.2"
            - "river==0.18.*"
            - "matplotlib==3.7.2"
            - "scikit-learn==1.3.0"
            - "tensorboard"
            - "torch==2.0.1"

  incremental_training: true

  drift_detector:
    class: sail.drift_detection.drift_detector.SAILDriftDetector
    params:
    - name: model
      class: river.drift.binary.EDDM
    - name: drift_param
      value: score

  pipeline_strategy: DetectAndIncrement
  verbosity_level: 1
  verbosity_interval: 1 # default is null
  tensorboard_log_dir: /data
  tracer:
    service_name: ForecastingService
    oltp_endpoint: http://jaeger-service:4318
    web_interface: http://master.more2020.eu/:31686

data_stream:
  source: local_file # modelardb or local_file
  model_table_or_path: /datasets/solar.parquet
  target: pv_module_soiling_derate
  timestamp_col: time_stamp
  selected_features: null # empty means use all features
  # only applicable for classification problem and when incremental_training is enabled
  classes: ["1", "0"]
  from_date: null
  
  to_date: null
  data_limit: 5000 # put null for all data
  data_batch_size: 250
  data_ingestion_freq: 0 #ingestion frequency in sec

save_model_after_training: true