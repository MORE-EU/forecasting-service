---
sail:

  model_path: null

  estimators:
    - random_forest: &random_forest
        class: sail.models.river.forest.AdaptiveRandomForestRegressor
        params:
          - name: n_models
            value: 20

  steps: &steps
    - type: tuple
      name: encode_date
      class: sklearn.compose.ColumnTransformer
      transformers:
        - type: columntuple
          name: encode_date
          class: sail.transformers.datetime.EncodeDateTransformer
          params:
            - name: datetime_col
              value: pickup_datetime
            - name: temporal_fields
              value:
              - time
              - day
              - month
              - is_weekend
            - name: prefix
              value: pickup
          columns:
          - pickup_datetime
      remainder: passthrough
      verbose_feature_names_out: false
    - type: tuple
      name: preprocessing
      class: sklearn.compose.ColumnTransformer
      transformers:
        - type: columntuple
          name: time
          class: sail.transformers.number.Polar2CartTransformer
          params:
            - name: n
              value: 24
          columns:
          - pickup_time
        - type: columntuple
          name: day
          class: sail.transformers.number.Polar2CartTransformer
          params:
            - name: n
              value: 7
          columns:
            - pickup_day
        - type: columntuple
          name: month
          class: sail.transformers.number.Polar2CartTransformer
          params:
            - name: n
              value: 12
          columns:
            - pickup_month
        - type: columntuple
          name: angle
          class: sail.transformers.number.Polar2CartTransformer
          params:
            - name: n
              value: 360
          columns:
            - direction_angle
        - type: columntuple
          name: PCA1
          class: sail.transformers.sklearn.decomposition.PCA
          params:
            - name: prefix
              value: pickup
            - name: n_components
              value: 2
          columns:
            - pickup_longitude
            - pickup_latitude
        - type: columntuple
          name: PCA2
          class: sail.transformers.sklearn.decomposition.PCA
          params:
            - name: prefix
              value: dropoff
            - name: n_components
              value: 2
          columns:
            - dropoff_longitude
            - dropoff_latitude
        - type: columntuple
          name: Scaler
          class: sail.transformers.river.preprocessing.StandardScaler
          columns:
            - arc_distance
      remainder: passthrough
      verbose_feature_names_out: false
    - type: tuple
      name: select
      class: sail.transformers.river.compose.Select
      params:
        - name: keys
          value:
            - pickup_pca0
            - pickup_pca1
            - dropoff_pca0
            - dropoff_pca1
            - pickup_time_x
            - pickup_time_y
            - pickup_day_x
            - pickup_day_y
            - pickup_month_x
            - pickup_month_y
            - direction_angle_x
            - direction_angle_y
            - pickup_is_weekend
            - arc_distance
    - type: tuple
      name: regressor
      value: passthrough

  sail_pipeline:
    - name: steps
      ref:  *steps
    - name: scoring
      class: river.metrics.R2
    - name: verbosity_level
      value: 1
    
  parameter_grid:
    - - name: regressor
        ref: 
          - *random_forest
      - name: regressor__n_models
        value:
          - 10
          - 15
          - 20

  search_method: SAILTuneGridSearchCV
  search_data_size: 200
  search_method_params:
    - name: verbose
      value: 1
    - name: num_cpus_per_trial
      value: 1
    - name: max_iters
      value: 1
    - name: early_stopping
      value: false
    - name: mode
      value: max
    - name: scoring
      value: r2
    - name: pipeline_auto_early_stop
      value: false
    - name: keep_best_configurations
      value: 2
    # - name: cluster_address
    #   value: "ray://ray-cluster-head-svc:10001"
    # - name: namespace
    #   value: sail-tune
    # - name: runtime_env
    #   params:
    #     - name: py_modules 
    #       module: 
    #         - sail     
    #     - name: pip
    #       value:
    #         - "dill"
    #         - "ipython"
    #         - "logzero"
    #         - "numpy==1.25.2"
    #         - "river==0.18.*"
    #         - "tune_sklearn"
    #         - "scikit-learn==1.3.0"

  incremental_training: true

  drift_detector:
    class: sail.drift_detection.drift_detector.SAILDriftDetector
    params:
    - name: model
      class: river.drift.binary.EDDM
    - name: drift_param
      value: difference

  pipeline_strategy: DetectAndIncrement
  verbosity_level: 1
  verbosity_interval: 4 # default is null

data_stream:
  source: local_file # modelardb or local_file
  model_table_or_path: /home/dhaval/dev/Datasets/yellow_tripdata_2015.parquet
  target: trip_duration_min
  timestamp_col: pickup_datetime 
  selected_features: [] # empty means use all features
  classes: [] # only applicable for classification problem and when incremental_training is enabled
  from_date: null
  to_date: null
  data_limit: 1000 # put null for all data
  data_batch_size: 50
  data_ingestion_freq: 0 #ingestion frequency in sec

save_model_after_training: false