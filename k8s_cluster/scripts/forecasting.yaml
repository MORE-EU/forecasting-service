---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: forecasting
  namespace: more-demo
  labels:
    app: forecasting
spec:
  replicas: 1
  selector: 
    matchLabels:
      app: forecasting
  template:
    metadata:
      labels:
        app: forecasting
    spec:
      nodeSelector:
        node-role.kubernetes.io/worker: ""
      containers:
      - name: forecasting-service-container
        image: dhavalsalwala/forecasting-service:latest
        # imagePullPolicy: Always
        # command: ["python", "forecasting_service/run.py"]
        args: ["--data_dir", "/data"]
        resources: {}
        volumeMounts:
          - name: forecasting-data
            mountPath: /data
            subPathExpr: $(POD_NAME)
          - name: shm
            mountPath: /dev/shm
            
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MODELARDB_HOSTNAME
          valueFrom: 
            configMapKeyRef:
              name: more-configmap
              key: MODELARDB_HOSTNAME
        - name: MODELARDB_PORT
          valueFrom: 
            configMapKeyRef:
              name: more-configmap
              key: MODELARDB_PORT
        - name: MODELARDB_INTERFACE
          valueFrom: 
            configMapKeyRef:
              name: more-configmap
              key: MODELARDB_INTERFACE
        - name: LOGGING_LEVEL
          valueFrom: 
            configMapKeyRef:
              name: more-configmap
              key: LOGGING_LEVEL
        - name: RABBITMQ_USER
          valueFrom: 
            configMapKeyRef:
              name: more-configmap
              key: RABBITMQ_USER
        - name: RABBITMQ_PASS
          valueFrom: 
            configMapKeyRef:
              name: more-configmap
              key: RABBITMQ_PASS
        - name: RABBITMQ_HOST
          valueFrom: 
            configMapKeyRef:
              name: more-configmap
              key: RABBITMQ_HOST
        - name: RABBITMQ_PORT
          valueFrom: 
            configMapKeyRef:
              name: more-configmap
              key: RABBITMQ_PORT
        - name: RABBITMQ_CONSUMER_QUEUE
          valueFrom: 
            configMapKeyRef:
              name: more-configmap
              key: RABBITMQ_CONSUMER_QUEUE
        - name: RABBITMQ_PRODUCER_QUEUE
          valueFrom: 
            configMapKeyRef:
              name: more-configmap
              key: RABBITMQ_PRODUCER_QUEUE

      # initContainers:
      # - name: init-modelardbd-service
      #   image: dhavalsalwala/forecasting-service:latest
      #   command: ["while [[ $(kubectl get pods -l app=modelardbd -o 'jsonpath={..status.conditions[?(@.type=='Ready')].status}') != 'True' ]]; do echo 'waiting for pod' && sleep 1; done"]
      
      volumes:
      - name: forecasting-data
        persistentVolumeClaim:
          claimName: forecasting-pvc
      - name: shm
        emptyDir:
          sizeLimit: "10.84G"
          medium: Memory